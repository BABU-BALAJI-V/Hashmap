//types

-> map<int,int> m;
-> unordered_map<string,int> m;

//inserting 1

pair<string,int> p=make_pair("balaji",2);
m.insert(p);

//inserting 2

pair<string,int> pair2("balaji",2);
m.insert(pair2);

//insert 3

m["balaji"] = 2;

//search

cout<<m["balaji"]<<endl;
cout<<m.at("balaji")<<endl;

//to check presence

cout<<m.count("balaji");

//erase

cout<<m.erase("balaji");

//traverse

for(auto i:m)
{
    cout<<i.first<<" "<<i.second;
}

//iterator

unordered_map<string,int> :: iterator it=m.begin();
while(it!=m.end())
{
    cout<<it->first<<" "<<it->second<<endl;
    it++;
}